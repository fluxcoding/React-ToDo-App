{"version":3,"sources":["components/TodoItem.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","props","todo","handleDelete","handleToggle","Table","Row","positive","completed","Cell","Checkbox","checked","onChange","title","Button","color","icon","floated","compact","size","onClick","TodoApp","state","todos","newTodo","handleToggleAll","allToggled","every","toggledTodos","map","setState","handleInputChange","event","value","target","handleNewTodoKeyDown","length","keyCode","preventDefault","trim","i","todosWithoutDeletedTodo","filter","t","index","handleClearCompleted","incompletedTodos","this","className","id","placeholder","autoFocus","onKeyDown","htmlFor","style","display","Header","HeaderCell","Body","key","handleTodoClick","Footer","fullWidth","colSpan","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61e45a81.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Checkbox, Button } from \"semantic-ui-react\";\r\n\r\nconst TodoItem = props => {\r\n  const { todo, handleDelete, handleToggle } = props;\r\n  return (\r\n    <Table.Row positive={todo.completed}>\r\n      <Table.Cell>\r\n        <Checkbox checked={todo.completed} onChange={handleToggle} />\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        {todo.title}\r\n        <Button\r\n          color=\"red\"\r\n          icon=\"trash\"\r\n          floated=\"right\"\r\n          compact\r\n          size=\"small\"\r\n          onClick={handleDelete}\r\n        />\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Checkbox, Button } from \"semantic-ui-react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoApp extends Component {\r\n  state = {\r\n    todos: [\r\n      { title: \"Study\", completed: false },\r\n      { title: \"Workout\", completed: false },\r\n      { title: \"Do some house work\", completed: false }\r\n    ],\r\n    newTodo: \"\"\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   fetch(\"http://localhost:4500/todos\")\r\n  //     .then(data => data.json())\r\n  //     .then(todos => this.setState({ todos }))\r\n  //     .catch(err => console.error({ err }));\r\n  // }\r\n\r\n  handleTodoClick(todo, index) {\r\n    const completed = todo.completed; // ziame false\r\n    const [...todos] = this.state.todos; // pravime kopija od todos array so objects\r\n    todos[index] = { ...todo, completed: !completed }; // go zimame todo preku index od\r\n    // kopijata i mu menjame vrednost, dole samo orginalot todos go overwrite so kopijata\r\n    this.setState({ todos: todos });\r\n  }\r\n\r\n  handleToggleAll = () => {\r\n    const [...todos] = this.state.todos;\r\n    const allToggled = todos.every(todo => todo.completed);\r\n    const toggledTodos = todos.map(todo => ({\r\n      ...todo,\r\n      completed: !allToggled\r\n    }));\r\n    this.setState({ todos: toggledTodos });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ newTodo: value });\r\n  };\r\n\r\n  handleNewTodoKeyDown = event => {\r\n    if (this.state.todos.length >= 10) {\r\n      return;\r\n    }\r\n    if (event.keyCode !== 13) {\r\n      // 13 is enter key\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n\r\n    const { newTodo, todos } = this.state;\r\n\r\n    const value = newTodo.trim();\r\n\r\n    if (value) {\r\n      this.setState({\r\n        todos: [...todos, { title: value, completed: false }],\r\n        newTodo: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDelete = i => {\r\n    const { todos } = this.state;\r\n    const todosWithoutDeletedTodo = todos.filter((t, index) => {\r\n      return index !== i;\r\n    });\r\n\r\n    this.setState({ todos: todosWithoutDeletedTodo });\r\n  };\r\n\r\n  handleClearCompleted = () => {\r\n    const { todos } = this.state;\r\n    const incompletedTodos = todos.filter(todo => !todo.completed);\r\n    this.setState({ todos: incompletedTodos });\r\n  };\r\n\r\n  render() {\r\n    const { todos, newTodo } = this.state;\r\n    const allToggled = todos.every(todo => todo.completed);\r\n    return (\r\n      <div className=\"todo-container\">\r\n        <input\r\n          id=\"new-todo\"\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          autoFocus={true}\r\n          value={this.state.newTodo}\r\n          onChange={this.handleInputChange}\r\n          onKeyDown={this.handleNewTodoKeyDown}\r\n        />\r\n        <label htmlFor=\"new-todo\" style={{ display: \"none\" }}>\r\n          New Todo\r\n        </label>\r\n        {todos.length === 0 ? (\r\n          <Table>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>You have nothing to do!</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n          </Table>\r\n        ) : (\r\n          <Table>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>\r\n                  <Checkbox\r\n                    checked={allToggled}\r\n                    onChange={this.handleToggleAll}\r\n                  />\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {this.state.todos.map((todo, i) => (\r\n                <TodoItem\r\n                  key={i}\r\n                  todo={todo}\r\n                  handleToggle={() => this.handleTodoClick(todo, i)}\r\n                  handleDelete={() => this.handleDelete(i)}\r\n                />\r\n              ))}\r\n            </Table.Body>\r\n            <Table.Footer fullWidth>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan=\"2\">\r\n                  <Button size=\"small\" onClick={this.handleClearCompleted}>\r\n                    Clear completed tasks\r\n                  </Button>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoApp;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Checkbox, Button } from \"semantic-ui-react\";\r\n\r\nimport TodoApp from \"./components/TodoApp\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <TodoApp />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\n\n// ReactDOM.render(React.createElement(App), document.getElementById(\"root\"));\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}